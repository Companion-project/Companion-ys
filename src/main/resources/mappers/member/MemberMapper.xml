<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.companion.mapper.MemberMapper">
    <!-- 컬럼 정의 -->
    <sql id="memberColumnBase">
        member_num, member_id, member_pw, member_name, member_addr,
        member_addr_detail, member_post, member_phone1, member_phone2,
        member_regist memberRegistDate, member_birth, member_email, member_email_conf,
        point, gender
    </sql>

    <select id="selectAll" resultType="com.example.companion.domain.MemberDTO" parameterType="com.example.companion.domain.StartEndPageDTO">
        <!-- 페이징을 위해 순서 번호를 가지고 와야 하므로 서브쿼리 사용 -->
        select * from
                    (select ROW_NUMBER() over (order by member_num) as rn,
                        <include refid="memberColumnBase"/>
                    from members
                    <where>
                        <if test="searchWord != null">
                            MEMBER_NAME like '%' || #{searchWord} || '%'
                            or member_id like '%' || #{searchWord} || '%'
                            or member_num like '%' || #{searchWord} || '%'
                        </if>
                    </where>
                    )sub1
        where rn between #{startRow} and #{endRow}

    </select>

    <select id="memberAutoNum" resultType="string">
        select concat('mem', coalesce(max(substring(member_num from 4)::integer), 100000) + 1)
        from members;
    </select>
    <insert id="memberInsert" parameterType="com.example.companion.domain.MemberDTO">
        insert into members(member_num, member_id, member_pw, member_name, member_addr,
                            member_addr_detail, member_post, member_phone1, member_phone2,
                            member_regist memberRegistDate, member_birth, gender, member_email, member_email_conf, point)
        values(#{memberNum},#{memberId},#{memberPw},#{memberName},
               #{memberAddr},#{memberAddrDetail},#{memberPost},#{memberPhone1},#{memberPhone2},
               now(),#{memberBirth}, #{gender},#{memberEmail}, null, 0)
    </insert>

    <select id="memberCount" parameterType="string" resultType="integer">
        select count(*) from members
            <if test='searchWord != null'>
                    <where>
                        MEMBER_NAME like '%' || #{searchWord} || '%'
                        or member_id like '%' || #{searchWord} || '%'
                        or member_num like '%' || #{searchWord} || '%'
                    </where>
            </if>

    </select>

</mapper>